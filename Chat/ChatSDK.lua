local bind = require("xlua.util").bindlocal YvSDKHelper = CS.Game.YvSDKHelper.theInstancelocal ChatSDK = {}--region Initfunction ChatSDK:Init()    --YvSDKHelper:Init()    self:BindReceiveChannelMessageNotify(bind(self.OnReceiveChannelMsg,self))endfunction ChatSDK:Release()    self:BindReceiveChannelMessageNotify(nil)    YvSDKHelper:Release()endfunction ChatSDK:Login(nickName,userId)    YvSDKHelper:YvSDK_Login(nickName,userId)endfunction ChatSDK:Logout()    YvSDKHelper:YvSDK_Logout()end----todo:init之后直接登陆--function ChatSDK:OnChatInit()--    print("!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!OnChatInit!!!!!!!!!!!!!!!!!!!!!!!!!")--    local usrIdStr = Global.GetUser():GetIdStr()--    self:Login(usrIdStr,usrIdStr)--end--endregion--region Methodfunction ChatSDK:SendChannelTextMessage(name,message)    YvSDKHelper:YvSDK_SendChannelTextMessage(name,message)endfunction ChatSDK:GetCachedHistoryMessages()    YvSDKHelper:GetCachedHistoryMessages()end--endregion--region Notifyfunction ChatSDK:BindReceiveChannelMessageNotify(onReceiveChannelMessage)    YvSDKHelper.onReceiveChannelMessage = onReceiveChannelMessageendfunction ChatSDK:OnReceiveChannelMsg(name,message)    Global:FireEvent(SdkEvent.CHAT_RECEIVECHANNEL,name,message)end--打开界面获取缓存消息function ChatSDK:BindGetCachedHistoryMessage(onGetCachedHistoryMessage)    YvSDKHelper.onGetCachedHistoryMessage = onGetCachedHistoryMessageend--endregion_G.ChatSDK = ChatSDK